{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","validated","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","_useState13","_useState14","isFormValid","setIsFormValid","pattern","isValidUrl","url","test","useEffect","trim","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11bfb115.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validated?: (url: string) => boolean\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  validated,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const hasError = validated\n    ? touched && !validated(value)\n    : touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n          required={required}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{validated ? 'Enter correct URL' : `${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\n  type NewMovieProps = {\n    onAdd: (movie: Movie) => void;\n  };\n\nexport const NewMovie: React.FC<NewMovieProps> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const isValidUrl = (url: string) => {\n    return pattern.test(url);\n  };\n\n  const handleReset = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    handleReset();\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    setIsFormValid(\n      !!title.trim()\n        && !!imgUrl.trim()\n        && !!imdbUrl.trim()\n        && !!imdbId.trim(),\n    );\n  }, [title, imgUrl, imdbUrl, imdbId]);\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleFormSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        validated={isValidUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        validated={isValidUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isFormValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const handleAddMovie = (movie: Movie) => {\n    setMovies((prevMovies) => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}